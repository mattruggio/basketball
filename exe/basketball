#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'basketball'

# This is an example integration script tying all the contexts together.
# This is definitely subject to change as this library gets extended further.

store                  = Basketball::App::FileStore.new
room_repository        = Basketball::App::RoomRepository.new(store)
league_repository      = Basketball::App::LeagueRepository.new(store)
coordinator_repository = Basketball::App::CoordinatorRepository.new(store)
scheduler              = Basketball::Season::Scheduler.new

seed_path  = ARGV[0].to_s.empty? ? File.join('spec', 'fixtures', 'seed.json') : ARGV[0]
output_dir = ARGV[1].to_s.empty? ? 'tmp' : ARGV[1]
seed       = JSON.parse(File.read(seed_path), symbolize_names: true)

league_path = File.join(output_dir, '00-league.json')

File.write(league_path, seed[:league].to_json)

front_offices = seed.dig(:league, :conferences).flat_map do |c|
  c[:divisions].flat_map do |d|
    d[:teams].flat_map do |t|
      { id: t[:id] }
    end
  end
end

room = {
  rounds: 12,
  front_offices:,
  players: seed[:players]
}

room_input_path = File.join(output_dir, '01-room-input.json')

File.write(room_input_path, room.to_json)

room = room_repository.load(room_input_path)

room.sim_rest!

room_output_path = File.join(output_dir, '02-room-output.json')

room_repository.save(room_output_path, room)

league = league_repository.load(league_path)

room.teams.each do |team|
  team.players.each do |player|
    league.sign!(team:, player:)
  end
end

scheduler_input_path = File.join(output_dir, '03-scheduler-input.json')

league_repository.save(scheduler_input_path, league)

calendar     = scheduler.schedule(league:)
current_date = calendar.exhibition_start_date
coordinator  = Basketball::Season::Coordinator.new(league:, calendar:, current_date:)

coordinator_input_path = File.join(output_dir, '04-coordinator-input.json')

coordinator_repository.save(coordinator_input_path, coordinator)

coordinator.sim_rest!

coordinator_output_path = File.join(output_dir, '05-coordinator-output.json')

coordinator_repository.save(coordinator_output_path, coordinator)

preseason_standings = Basketball::Season::Standings.new
season_standings = Basketball::Season::Standings.new

league.teams.each do |team|
  preseason_standings.register!(team)
  season_standings.register!(team)
end

coordinator.exhibition_results.each { |result| preseason_standings.accept!(result) }
coordinator.regular_results.each    { |result| season_standings.accept!(result) }

puts 'Preseason Standings'
puts preseason_standings
puts '--------------------------------------------'
puts 'Season Standings'
puts season_standings
